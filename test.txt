Server {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  _nsps: Map {
    '/' => Namespace {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      sockets: Map {},
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Circular],
      name: '/',
      adapter: [Adapter],
      [Symbol(kCapture)]: false
    }
  },
  parentNsps: Map {},
  _path: '/socket.io',
  clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
  _connectTimeout: 45000,
  _serveClient: true,
  _parser: {
    protocol: 5,
    PacketType: {
      '0': 'CONNECT',
      '1': 'DISCONNECT',
      '2': 'EVENT',
      '3': 'ACK',
      '4': 'CONNECT_ERROR',
      '5': 'BINARY_EVENT',
      '6': 'BINARY_ACK',
      CONNECT: 0,
      DISCONNECT: 1,
      EVENT: 2,
      ACK: 3,
      CONNECT_ERROR: 4,
      BINARY_EVENT: 5,
      BINARY_ACK: 6
    },
    Encoder: [Function: Encoder],
    Decoder: [Function: Decoder]
  },
  encoder: Encoder {},
  _adapter: [Function: Adapter],
  sockets: Namespace {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    sockets: Map {},
    _fns: [],
    _rooms: Set {},
    _flags: {},
    _ids: 0,
    server: [Circular],
    name: '/',
    adapter: Adapter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      nsp: [Circular],
      rooms: Map {},
      sids: Map {},
      encoder: Encoder {},
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  eio: Server {
    _events: [Object: null prototype] {
      connection: [Function: bound onconnection]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    clients: {},
    clientsCount: 0,
    opts: {
      wsEngine: 'ws',
      pingTimeout: 9000,
      pingInterval: 3000,
      upgradeTimeout: 10000,
      maxHttpBufferSize: 1000000,
      transports: [Array],
      allowUpgrades: true,
      httpCompression: [Object],
      cors: false,
      cookie: [Object],
      origins: '*:*',
      path: '/socket.io'
    },
    ws: WebSocketServer {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      options: [Object],
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  httpServer: Server {
    insecureHTTPParser: undefined,
    _events: [Object: null prototype] {
      connection: [Function: connectionListener],
      listening: [Array],
      close: [Function: bound close],
      upgrade: [Function],
      request: [Function]
    },
    _eventsCount: 5,
    _maxListeners: undefined,
    _connections: 0,
    _handle: TCP {
      reading: false,
      onconnection: [Function: onconnection],
      [Symbol(owner)]: [Circular]
    },
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 120000,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 40000,
    _connectionKey: '6::::5555',
    [Symbol(IncomingMessage)]: [Function: IncomingMessage],
    [Symbol(ServerResponse)]: [Function: ServerResponse],
    [Symbol(kCapture)]: false,
    [Symbol(asyncId)]: 4
  },
  engine: Server {
    _events: [Object: null prototype] {
      connection: [Function: bound onconnection]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    clients: {},
    clientsCount: 0,
    opts: {
      wsEngine: 'ws',
      pingTimeout: 9000,
      pingInterval: 3000,
      upgradeTimeout: 10000,
      maxHttpBufferSize: 1000000,
      transports: [Array],
      allowUpgrades: true,
      httpCompression: [Object],
      cors: false,
      cookie: [Object],
      origins: '*:*',
      path: '/socket.io'
    },
    ws: WebSocketServer {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      options: [Object],
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  [Symbol(kCapture)]: false
}
Listening on port 5555
http://localhost:5555
Socket {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  nsp: Namespace {
    _events: [Object: null prototype] { connection: [Function] },
    _eventsCount: 1,
    _maxListeners: undefined,
    sockets: Map { 'IEBEEwrvLcAHFSRwAAAC' => [Circular] },
    _fns: [],
    _rooms: Set {},
    _flags: {},
    _ids: 0,
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Circular],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    name: '/',
    adapter: Adapter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      nsp: [Circular],
      rooms: [Map],
      sids: [Map],
      encoder: Encoder {},
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  client: Client {
    sockets: Map { 'IEBEEwrvLcAHFSRwAAAC' => [Circular] },
    nsps: Map { '/' => [Circular] },
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Namespace],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    conn: Socket {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      id: 'zvFVxc71hYYP4yrmAAAA',
      server: [Server],
      upgrading: false,
      upgraded: false,
      readyState: 'open',
      writeBuffer: [],
      packetsFn: [],
      sentCallbackFn: [],
      cleanupFn: [Array],
      request: [IncomingMessage],
      remoteAddress: '::ffff:127.0.0.1',
      checkIntervalTimer: null,
      upgradeTimeoutTimer: null,
      pingTimeoutTimer: Timeout {
        _idleTimeout: 12000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 811,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 30,
        [Symbol(triggerId)]: 8
      },
      pingIntervalTimer: Timeout {
        _idleTimeout: 3000,
        _idlePrev: [Timeout],
        _idleNext: [TimersList],
        _idleStart: 768,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 18,
        [Symbol(triggerId)]: 0
      },
      transport: [WebSocket],
      [Symbol(kCapture)]: false
    },
    encoder: Encoder {},
    decoder: Decoder { _callbacks: [Object] },
    id: 'zvFVxc71hYYP4yrmAAAA',
    onclose: [Function: bound onclose],
    ondata: [Function: bound ondata],
    onerror: [Function: bound onerror],
    ondecoded: [Function: bound ondecoded],
    connectTimeout: null
  },
  acks: Map {},
  fns: [],
  flags: {},
  _rooms: Set {},
  server: Server {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    _nsps: Map { '/' => [Namespace] },
    parentNsps: Map {},
    _path: '/socket.io',
    clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
    _connectTimeout: 45000,
    _serveClient: true,
    _parser: {
      protocol: 5,
      PacketType: [Object],
      Encoder: [Function: Encoder],
      Decoder: [Function: Decoder]
    },
    encoder: Encoder {},
    _adapter: [Function: Adapter],
    sockets: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Circular],
      name: '/',
      adapter: [Adapter],
      [Symbol(kCapture)]: false
    },
    eio: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 2,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    httpServer: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 40000,
      _connectionKey: '6::::5555',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 4
    },
    engine: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 2,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  adapter: Adapter {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    nsp: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Server],
      name: '/',
      adapter: [Circular],
      [Symbol(kCapture)]: false
    },
    rooms: Map { 'IEBEEwrvLcAHFSRwAAAC' => [Set] },
    sids: Map { 'IEBEEwrvLcAHFSRwAAAC' => [Set] },
    encoder: Encoder {},
    [Symbol(kCapture)]: false
  },
  id: 'IEBEEwrvLcAHFSRwAAAC',
  connected: true,
  disconnected: false,
  handshake: {
    headers: {
      host: 'localhost:5555',
      connection: 'Upgrade',
      pragma: 'no-cache',
      'cache-control': 'no-cache',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36',
      upgrade: 'websocket',
      origin: 'http://localhost:3000',
      'sec-websocket-version': '13',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-US,en;q=0.9,fil;q=0.8',
      'sec-websocket-key': 'RcbVgZYKU4FCjIHcxpdl0A==',
      'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
    },
    time: 'Tue Nov 10 2020 12:37:13 GMT+0800 (Singapore Standard Time)',
    address: '::ffff:127.0.0.1',
    xdomain: true,
    secure: false,
    issued: 1604983033339,
    url: '/socket.io/?EIO=4&transport=websocket',
    query: [Object: null prototype] { EIO: '4', transport: 'websocket' },
    auth: {}
  },
  [Symbol(kCapture)]: false
}
Made socket connection
Socket {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  nsp: Namespace {
    _events: [Object: null prototype] { connection: [Function] },
    _eventsCount: 1,
    _maxListeners: undefined,
    sockets: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Socket],
      '0HdMywJXTyb4MTz3AAAD' => [Circular]
    },
    _fns: [],
    _rooms: Set {},
    _flags: {},
    _ids: 0,
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Circular],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    name: '/',
    adapter: Adapter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      nsp: [Circular],
      rooms: [Map],
      sids: [Map],
      encoder: Encoder {},
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  client: Client {
    sockets: Map { '0HdMywJXTyb4MTz3AAAD' => [Circular] },
    nsps: Map { '/' => [Circular] },
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Namespace],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    conn: Socket {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      id: 'BymlUZ8I0kMVFLulAAAB',
      server: [Server],
      upgrading: false,
      upgraded: false,
      readyState: 'open',
      writeBuffer: [],
      packetsFn: [],
      sentCallbackFn: [],
      cleanupFn: [Array],
      request: [IncomingMessage],
      remoteAddress: '::ffff:127.0.0.1',
      checkIntervalTimer: null,
      upgradeTimeoutTimer: null,
      pingTimeoutTimer: Timeout {
        _idleTimeout: 12000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 828,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 36,
        [Symbol(triggerId)]: 20
      },
      pingIntervalTimer: Timeout {
        _idleTimeout: 3000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 776,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 28,
        [Symbol(triggerId)]: 0
      },
      transport: [WebSocket],
      [Symbol(kCapture)]: false
    },
    encoder: Encoder {},
    decoder: Decoder { _callbacks: [Object] },
    id: 'BymlUZ8I0kMVFLulAAAB',
    onclose: [Function: bound onclose],
    ondata: [Function: bound ondata],
    onerror: [Function: bound onerror],
    ondecoded: [Function: bound ondecoded],
    connectTimeout: null
  },
  acks: Map {},
  fns: [],
  flags: {},
  _rooms: Set {},
  server: Server {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    _nsps: Map { '/' => [Namespace] },
    parentNsps: Map {},
    _path: '/socket.io',
    clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
    _connectTimeout: 45000,
    _serveClient: true,
    _parser: {
      protocol: 5,
      PacketType: [Object],
      Encoder: [Function: Encoder],
      Decoder: [Function: Decoder]
    },
    encoder: Encoder {},
    _adapter: [Function: Adapter],
    sockets: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Circular],
      name: '/',
      adapter: [Adapter],
      [Symbol(kCapture)]: false
    },
    eio: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 2,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    httpServer: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 40000,
      _connectionKey: '6::::5555',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 4
    },
    engine: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 2,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  adapter: Adapter {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    nsp: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Server],
      name: '/',
      adapter: [Circular],
      [Symbol(kCapture)]: false
    },
    rooms: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Set],
      '0HdMywJXTyb4MTz3AAAD' => [Set]
    },
    sids: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Set],
      '0HdMywJXTyb4MTz3AAAD' => [Set]
    },
    encoder: Encoder {},
    [Symbol(kCapture)]: false
  },
  id: '0HdMywJXTyb4MTz3AAAD',
  connected: true,
  disconnected: false,
  handshake: {
    headers: {
      host: 'localhost:5555',
      connection: 'Upgrade',
      pragma: 'no-cache',
      'cache-control': 'no-cache',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36',
      upgrade: 'websocket',
      origin: 'http://localhost:3000',
      'sec-websocket-version': '13',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-US,en;q=0.9',
      'sec-websocket-key': 'KNVXfcvAsTj+cTKc3cH47w==',
      'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
    },
    time: 'Tue Nov 10 2020 12:37:13 GMT+0800 (Singapore Standard Time)',
    address: '::ffff:127.0.0.1',
    xdomain: true,
    secure: false,
    issued: 1604983033353,
    url: '/socket.io/?EIO=4&transport=websocket',
    query: [Object: null prototype] { EIO: '4', transport: 'websocket' },
    auth: {}
  },
  [Symbol(kCapture)]: false
}
Made socket connection
Socket {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  nsp: Namespace {
    _events: [Object: null prototype] { connection: [Function] },
    _eventsCount: 1,
    _maxListeners: undefined,
    sockets: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Socket],
      '0HdMywJXTyb4MTz3AAAD' => [Socket],
      'ufLNEy6r1NZlLMHTAAAG' => [Circular]
    },
    _fns: [],
    _rooms: Set {},
    _flags: {},
    _ids: 0,
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Circular],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    name: '/',
    adapter: Adapter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      nsp: [Circular],
      rooms: [Map],
      sids: [Map],
      encoder: Encoder {},
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  client: Client {
    sockets: Map { 'ufLNEy6r1NZlLMHTAAAG' => [Circular] },
    nsps: Map { '/' => [Circular] },
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Namespace],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    conn: Socket {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      id: 'Vdg0ce5c2zir3Y-EAAAE',
      server: [Server],
      upgrading: false,
      upgraded: false,
      readyState: 'open',
      writeBuffer: [],
      packetsFn: [],
      sentCallbackFn: [],
      cleanupFn: [Array],
      request: [IncomingMessage],
      remoteAddress: '::ffff:127.0.0.1',
      checkIntervalTimer: null,
      upgradeTimeoutTimer: null,
      pingTimeoutTimer: Timeout {
        _idleTimeout: 12000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 886,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 62,
        [Symbol(triggerId)]: 42
      },
      pingIntervalTimer: Timeout {
        _idleTimeout: 3000,
        _idlePrev: [Timeout],
        _idleNext: [Timeout],
        _idleStart: 843,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 54,
        [Symbol(triggerId)]: 0
      },
      transport: [WebSocket],
      [Symbol(kCapture)]: false
    },
    encoder: Encoder {},
    decoder: Decoder { _callbacks: [Object] },
    id: 'Vdg0ce5c2zir3Y-EAAAE',
    onclose: [Function: bound onclose],
    ondata: [Function: bound ondata],
    onerror: [Function: bound onerror],
    ondecoded: [Function: bound ondecoded],
    connectTimeout: null
  },
  acks: Map {},
  fns: [],
  flags: {},
  _rooms: Set {},
  server: Server {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    _nsps: Map { '/' => [Namespace] },
    parentNsps: Map {},
    _path: '/socket.io',
    clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
    _connectTimeout: 45000,
    _serveClient: true,
    _parser: {
      protocol: 5,
      PacketType: [Object],
      Encoder: [Function: Encoder],
      Decoder: [Function: Decoder]
    },
    encoder: Encoder {},
    _adapter: [Function: Adapter],
    sockets: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Circular],
      name: '/',
      adapter: [Adapter],
      [Symbol(kCapture)]: false
    },
    eio: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 4,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    httpServer: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 4,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 40000,
      _connectionKey: '6::::5555',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 4
    },
    engine: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 4,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  adapter: Adapter {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    nsp: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Server],
      name: '/',
      adapter: [Circular],
      [Symbol(kCapture)]: false
    },
    rooms: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Set],
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set]
    },
    sids: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Set],
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set]
    },
    encoder: Encoder {},
    [Symbol(kCapture)]: false
  },
  id: 'ufLNEy6r1NZlLMHTAAAG',
  connected: true,
  disconnected: false,
  handshake: {
    headers: {
      host: 'localhost:5555',
      connection: 'Upgrade',
      pragma: 'no-cache',
      'cache-control': 'no-cache',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36',
      upgrade: 'websocket',
      origin: 'http://localhost:3000',
      'sec-websocket-version': '13',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-US,en;q=0.9',
      'sec-websocket-key': 'ZRLWE7zubUqro5hqhmTODA==',
      'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
    },
    time: 'Tue Nov 10 2020 12:37:13 GMT+0800 (Singapore Standard Time)',
    address: '::ffff:127.0.0.1',
    xdomain: true,
    secure: false,
    issued: 1604983033410,
    url: '/socket.io/?EIO=4&transport=websocket',
    query: [Object: null prototype] { EIO: '4', transport: 'websocket' },
    auth: {}
  },
  [Symbol(kCapture)]: false
}
Made socket connection
Socket {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  nsp: Namespace {
    _events: [Object: null prototype] { connection: [Function] },
    _eventsCount: 1,
    _maxListeners: undefined,
    sockets: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Socket],
      '0HdMywJXTyb4MTz3AAAD' => [Socket],
      'ufLNEy6r1NZlLMHTAAAG' => [Socket],
      'zK0haMRFoA5NVbYsAAAK' => [Circular]
    },
    _fns: [],
    _rooms: Set {},
    _flags: {},
    _ids: 0,
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Circular],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    name: '/',
    adapter: Adapter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      nsp: [Circular],
      rooms: [Map],
      sids: [Map],
      encoder: Encoder {},
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  client: Client {
    sockets: Map { 'zK0haMRFoA5NVbYsAAAK' => [Circular] },
    nsps: Map { '/' => [Circular] },
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Namespace],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    conn: Socket {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      id: 'yv5XAAIKuF9ddQePAAAF',
      server: [Server],
      upgrading: false,
      upgraded: false,
      readyState: 'open',
      writeBuffer: [],
      packetsFn: [],
      sentCallbackFn: [],
      cleanupFn: [Array],
      request: [IncomingMessage],
      remoteAddress: '::1',
      checkIntervalTimer: null,
      upgradeTimeoutTimer: null,
      pingTimeoutTimer: Timeout {
        _idleTimeout: 12000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 927,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 98,
        [Symbol(triggerId)]: 46
      },
      pingIntervalTimer: Timeout {
        _idleTimeout: 3000,
        _idlePrev: [Timeout],
        _idleNext: [Timeout],
        _idleStart: 848,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 60,
        [Symbol(triggerId)]: 0
      },
      transport: [WebSocket],
      [Symbol(kCapture)]: false
    },
    encoder: Encoder {},
    decoder: Decoder { _callbacks: [Object] },
    id: 'yv5XAAIKuF9ddQePAAAF',
    onclose: [Function: bound onclose],
    ondata: [Function: bound ondata],
    onerror: [Function: bound onerror],
    ondecoded: [Function: bound ondecoded],
    connectTimeout: null
  },
  acks: Map {},
  fns: [],
  flags: {},
  _rooms: Set {},
  server: Server {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    _nsps: Map { '/' => [Namespace] },
    parentNsps: Map {},
    _path: '/socket.io',
    clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
    _connectTimeout: 45000,
    _serveClient: true,
    _parser: {
      protocol: 5,
      PacketType: [Object],
      Encoder: [Function: Encoder],
      Decoder: [Function: Decoder]
    },
    encoder: Encoder {},
    _adapter: [Function: Adapter],
    sockets: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Circular],
      name: '/',
      adapter: [Adapter],
      [Symbol(kCapture)]: false
    },
    eio: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 7,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    httpServer: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 7,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 40000,
      _connectionKey: '6::::5555',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 4
    },
    engine: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 7,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  adapter: Adapter {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    nsp: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Server],
      name: '/',
      adapter: [Circular],
      [Symbol(kCapture)]: false
    },
    rooms: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Set],
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set],
      'zK0haMRFoA5NVbYsAAAK' => [Set]
    },
    sids: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Set],
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set],
      'zK0haMRFoA5NVbYsAAAK' => [Set]
    },
    encoder: Encoder {},
    [Symbol(kCapture)]: false
  },
  id: 'zK0haMRFoA5NVbYsAAAK',
  connected: true,
  disconnected: false,
  handshake: {
    headers: {
      host: 'localhost:5555',
      connection: 'Upgrade',
      pragma: 'no-cache',
      'cache-control': 'no-cache',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36',
      upgrade: 'websocket',
      origin: 'http://localhost:3000',
      'sec-websocket-version': '13',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-US,en;q=0.9',
      'sec-websocket-key': 'AiMU63rcwMEDkFgQuKZs3w==',
      'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
    },
    time: 'Tue Nov 10 2020 12:37:13 GMT+0800 (Singapore Standard Time)',
    address: '::1',
    xdomain: true,
    secure: false,
    issued: 1604983033452,
    url: '/socket.io/?EIO=4&transport=websocket',
    query: [Object: null prototype] { EIO: '4', transport: 'websocket' },
    auth: {}
  },
  [Symbol(kCapture)]: false
}
Made socket connection
Socket {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  nsp: Namespace {
    _events: [Object: null prototype] { connection: [Function] },
    _eventsCount: 1,
    _maxListeners: undefined,
    sockets: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Socket],
      '0HdMywJXTyb4MTz3AAAD' => [Socket],
      'ufLNEy6r1NZlLMHTAAAG' => [Socket],
      'zK0haMRFoA5NVbYsAAAK' => [Socket],
      'kwTAG6akkreOLCBhAAAL' => [Circular]
    },
    _fns: [],
    _rooms: Set {},
    _flags: {},
    _ids: 0,
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Circular],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    name: '/',
    adapter: Adapter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      nsp: [Circular],
      rooms: [Map],
      sids: [Map],
      encoder: Encoder {},
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  client: Client {
    sockets: Map { 'kwTAG6akkreOLCBhAAAL' => [Circular] },
    nsps: Map { '/' => [Circular] },
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Namespace],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    conn: Socket {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      id: 'lsM0QNfp9tsm-zZJAAAH',
      server: [Server],
      upgrading: false,
      upgraded: false,
      readyState: 'open',
      writeBuffer: [],
      packetsFn: [],
      sentCallbackFn: [],
      cleanupFn: [Array],
      request: [IncomingMessage],
      remoteAddress: '::ffff:127.0.0.1',
      checkIntervalTimer: null,
      upgradeTimeoutTimer: null,
      pingTimeoutTimer: Timeout {
        _idleTimeout: 12000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 967,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 104,
        [Symbol(triggerId)]: 68
      },
      pingIntervalTimer: Timeout {
        _idleTimeout: 3000,
        _idlePrev: [Timeout],
        _idleNext: [Timeout],
        _idleStart: 897,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 80,
        [Symbol(triggerId)]: 0
      },
      transport: [WebSocket],
      [Symbol(kCapture)]: false
    },
    encoder: Encoder {},
    decoder: Decoder { _callbacks: [Object] },
    id: 'lsM0QNfp9tsm-zZJAAAH',
    onclose: [Function: bound onclose],
    ondata: [Function: bound ondata],
    onerror: [Function: bound onerror],
    ondecoded: [Function: bound ondecoded],
    connectTimeout: null
  },
  acks: Map {},
  fns: [],
  flags: {},
  _rooms: Set {},
  server: Server {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    _nsps: Map { '/' => [Namespace] },
    parentNsps: Map {},
    _path: '/socket.io',
    clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
    _connectTimeout: 45000,
    _serveClient: true,
    _parser: {
      protocol: 5,
      PacketType: [Object],
      Encoder: [Function: Encoder],
      Decoder: [Function: Decoder]
    },
    encoder: Encoder {},
    _adapter: [Function: Adapter],
    sockets: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Circular],
      name: '/',
      adapter: [Adapter],
      [Symbol(kCapture)]: false
    },
    eio: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 7,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    httpServer: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 7,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 40000,
      _connectionKey: '6::::5555',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 4
    },
    engine: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 7,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  adapter: Adapter {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    nsp: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Server],
      name: '/',
      adapter: [Circular],
      [Symbol(kCapture)]: false
    },
    rooms: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Set],
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set],
      'zK0haMRFoA5NVbYsAAAK' => [Set],
      'kwTAG6akkreOLCBhAAAL' => [Set]
    },
    sids: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Set],
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set],
      'zK0haMRFoA5NVbYsAAAK' => [Set],
      'kwTAG6akkreOLCBhAAAL' => [Set]
    },
    encoder: Encoder {},
    [Symbol(kCapture)]: false
  },
  id: 'kwTAG6akkreOLCBhAAAL',
  connected: true,
  disconnected: false,
  handshake: {
    headers: {
      host: 'localhost:5555',
      connection: 'Upgrade',
      pragma: 'no-cache',
      'cache-control': 'no-cache',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36',
      upgrade: 'websocket',
      origin: 'http://localhost:3000',
      'sec-websocket-version': '13',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-US,en;q=0.9',
      'sec-websocket-key': 'oV1Sm019dC+9Bwl7dBRcCw==',
      'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
    },
    time: 'Tue Nov 10 2020 12:37:13 GMT+0800 (Singapore Standard Time)',
    address: '::ffff:127.0.0.1',
    xdomain: true,
    secure: false,
    issued: 1604983033492,
    url: '/socket.io/?EIO=4&transport=websocket',
    query: [Object: null prototype] { EIO: '4', transport: 'websocket' },
    auth: {}
  },
  [Symbol(kCapture)]: false
}
Made socket connection
Socket {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  nsp: Namespace {
    _events: [Object: null prototype] { connection: [Function] },
    _eventsCount: 1,
    _maxListeners: undefined,
    sockets: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Socket],
      '0HdMywJXTyb4MTz3AAAD' => [Socket],
      'ufLNEy6r1NZlLMHTAAAG' => [Socket],
      'zK0haMRFoA5NVbYsAAAK' => [Socket],
      'kwTAG6akkreOLCBhAAAL' => [Socket],
      'do0i8v3AVN9e7gcTAAAM' => [Circular]
    },
    _fns: [],
    _rooms: Set {},
    _flags: {},
    _ids: 0,
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Circular],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    name: '/',
    adapter: Adapter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      nsp: [Circular],
      rooms: [Map],
      sids: [Map],
      encoder: Encoder {},
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  client: Client {
    sockets: Map { 'do0i8v3AVN9e7gcTAAAM' => [Circular] },
    nsps: Map { '/' => [Circular] },
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Namespace],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    conn: Socket {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      id: '4dII4SesZ31h4aScAAAI',
      server: [Server],
      upgrading: false,
      upgraded: false,
      readyState: 'open',
      writeBuffer: [],
      packetsFn: [],
      sentCallbackFn: [],
      cleanupFn: [Array],
      request: [IncomingMessage],
      remoteAddress: '::1',
      checkIntervalTimer: null,
      upgradeTimeoutTimer: null,
      pingTimeoutTimer: Timeout {
        _idleTimeout: 12000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 997,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 110,
        [Symbol(triggerId)]: 72
      },
      pingIntervalTimer: Timeout {
        _idleTimeout: 3000,
        _idlePrev: [Timeout],
        _idleNext: [Timeout],
        _idleStart: 902,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 86,
        [Symbol(triggerId)]: 0
      },
      transport: [WebSocket],
      [Symbol(kCapture)]: false
    },
    encoder: Encoder {},
    decoder: Decoder { _callbacks: [Object] },
    id: '4dII4SesZ31h4aScAAAI',
    onclose: [Function: bound onclose],
    ondata: [Function: bound ondata],
    onerror: [Function: bound onerror],
    ondecoded: [Function: bound ondecoded],
    connectTimeout: null
  },
  acks: Map {},
  fns: [],
  flags: {},
  _rooms: Set {},
  server: Server {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    _nsps: Map { '/' => [Namespace] },
    parentNsps: Map {},
    _path: '/socket.io',
    clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
    _connectTimeout: 45000,
    _serveClient: true,
    _parser: {
      protocol: 5,
      PacketType: [Object],
      Encoder: [Function: Encoder],
      Decoder: [Function: Decoder]
    },
    encoder: Encoder {},
    _adapter: [Function: Adapter],
    sockets: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Circular],
      name: '/',
      adapter: [Adapter],
      [Symbol(kCapture)]: false
    },
    eio: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 7,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    httpServer: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 7,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 40000,
      _connectionKey: '6::::5555',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 4
    },
    engine: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 7,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  adapter: Adapter {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    nsp: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Server],
      name: '/',
      adapter: [Circular],
      [Symbol(kCapture)]: false
    },
    rooms: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Set],
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set],
      'zK0haMRFoA5NVbYsAAAK' => [Set],
      'kwTAG6akkreOLCBhAAAL' => [Set],
      'do0i8v3AVN9e7gcTAAAM' => [Set]
    },
    sids: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Set],
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set],
      'zK0haMRFoA5NVbYsAAAK' => [Set],
      'kwTAG6akkreOLCBhAAAL' => [Set],
      'do0i8v3AVN9e7gcTAAAM' => [Set]
    },
    encoder: Encoder {},
    [Symbol(kCapture)]: false
  },
  id: 'do0i8v3AVN9e7gcTAAAM',
  connected: true,
  disconnected: false,
  handshake: {
    headers: {
      host: 'localhost:5555',
      connection: 'Upgrade',
      pragma: 'no-cache',
      'cache-control': 'no-cache',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36',
      upgrade: 'websocket',
      origin: 'http://localhost:3000',
      'sec-websocket-version': '13',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-US,en;q=0.9',
      'sec-websocket-key': 'Q3raUZmLZQWMtUyB1I5Wug==',
      'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
    },
    time: 'Tue Nov 10 2020 12:37:13 GMT+0800 (Singapore Standard Time)',
    address: '::1',
    xdomain: true,
    secure: false,
    issued: 1604983033522,
    url: '/socket.io/?EIO=4&transport=websocket',
    query: [Object: null prototype] { EIO: '4', transport: 'websocket' },
    auth: {}
  },
  [Symbol(kCapture)]: false
}
Made socket connection
Socket {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  nsp: Namespace {
    _events: [Object: null prototype] { connection: [Function] },
    _eventsCount: 1,
    _maxListeners: undefined,
    sockets: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Socket],
      '0HdMywJXTyb4MTz3AAAD' => [Socket],
      'ufLNEy6r1NZlLMHTAAAG' => [Socket],
      'zK0haMRFoA5NVbYsAAAK' => [Socket],
      'kwTAG6akkreOLCBhAAAL' => [Socket],
      'do0i8v3AVN9e7gcTAAAM' => [Socket],
      'b1V4mtsjS8g0QSwwAAAN' => [Circular]
    },
    _fns: [],
    _rooms: Set {},
    _flags: {},
    _ids: 0,
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Circular],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    name: '/',
    adapter: Adapter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      nsp: [Circular],
      rooms: [Map],
      sids: [Map],
      encoder: Encoder {},
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  client: Client {
    sockets: Map { 'b1V4mtsjS8g0QSwwAAAN' => [Circular] },
    nsps: Map { '/' => [Circular] },
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Namespace],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    conn: Socket {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      id: 'dRyab16YPOm73Q5yAAAJ',
      server: [Server],
      upgrading: false,
      upgraded: false,
      readyState: 'open',
      writeBuffer: [],
      packetsFn: [],
      sentCallbackFn: [],
      cleanupFn: [Array],
      request: [IncomingMessage],
      remoteAddress: '::ffff:127.0.0.1',
      checkIntervalTimer: null,
      upgradeTimeoutTimer: null,
      pingTimeoutTimer: Timeout {
        _idleTimeout: 12000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 1059,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 116,
        [Symbol(triggerId)]: 88
      },
      pingIntervalTimer: Timeout {
        _idleTimeout: 3000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 909,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 96,
        [Symbol(triggerId)]: 0
      },
      transport: [WebSocket],
      [Symbol(kCapture)]: false
    },
    encoder: Encoder {},
    decoder: Decoder { _callbacks: [Object] },
    id: 'dRyab16YPOm73Q5yAAAJ',
    onclose: [Function: bound onclose],
    ondata: [Function: bound ondata],
    onerror: [Function: bound onerror],
    ondecoded: [Function: bound ondecoded],
    connectTimeout: null
  },
  acks: Map {},
  fns: [],
  flags: {},
  _rooms: Set {},
  server: Server {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    _nsps: Map { '/' => [Namespace] },
    parentNsps: Map {},
    _path: '/socket.io',
    clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
    _connectTimeout: 45000,
    _serveClient: true,
    _parser: {
      protocol: 5,
      PacketType: [Object],
      Encoder: [Function: Encoder],
      Decoder: [Function: Decoder]
    },
    encoder: Encoder {},
    _adapter: [Function: Adapter],
    sockets: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Circular],
      name: '/',
      adapter: [Adapter],
      [Symbol(kCapture)]: false
    },
    eio: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 7,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    httpServer: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 7,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 40000,
      _connectionKey: '6::::5555',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 4
    },
    engine: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 7,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  adapter: Adapter {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    nsp: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Server],
      name: '/',
      adapter: [Circular],
      [Symbol(kCapture)]: false
    },
    rooms: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Set],
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set],
      'zK0haMRFoA5NVbYsAAAK' => [Set],
      'kwTAG6akkreOLCBhAAAL' => [Set],
      'do0i8v3AVN9e7gcTAAAM' => [Set],
      'b1V4mtsjS8g0QSwwAAAN' => [Set]
    },
    sids: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Set],
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set],
      'zK0haMRFoA5NVbYsAAAK' => [Set],
      'kwTAG6akkreOLCBhAAAL' => [Set],
      'do0i8v3AVN9e7gcTAAAM' => [Set],
      'b1V4mtsjS8g0QSwwAAAN' => [Set]
    },
    encoder: Encoder {},
    [Symbol(kCapture)]: false
  },
  id: 'b1V4mtsjS8g0QSwwAAAN',
  connected: true,
  disconnected: false,
  handshake: {
    headers: {
      host: 'localhost:5555',
      connection: 'Upgrade',
      pragma: 'no-cache',
      'cache-control': 'no-cache',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36',
      upgrade: 'websocket',
      origin: 'http://localhost:3000',
      'sec-websocket-version': '13',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-US,en;q=0.9',
      'sec-websocket-key': 'BvCkt5cE2oqbHbMRN04gVQ==',
      'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
    },
    time: 'Tue Nov 10 2020 12:37:13 GMT+0800 (Singapore Standard Time)',
    address: '::ffff:127.0.0.1',
    xdomain: true,
    secure: false,
    issued: 1604983033583,
    url: '/socket.io/?EIO=4&transport=websocket',
    query: [Object: null prototype] { EIO: '4', transport: 'websocket' },
    auth: {}
  },
  [Symbol(kCapture)]: false
}
Made socket connection
Socket {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  nsp: Namespace {
    _events: [Object: null prototype] { connection: [Function] },
    _eventsCount: 1,
    _maxListeners: undefined,
    sockets: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Socket],
      '0HdMywJXTyb4MTz3AAAD' => [Socket],
      'ufLNEy6r1NZlLMHTAAAG' => [Socket],
      'zK0haMRFoA5NVbYsAAAK' => [Socket],
      'kwTAG6akkreOLCBhAAAL' => [Socket],
      'do0i8v3AVN9e7gcTAAAM' => [Socket],
      'b1V4mtsjS8g0QSwwAAAN' => [Socket],
      'bjfHeA7u5KrYdgXQAAAP' => [Circular]
    },
    _fns: [],
    _rooms: Set {},
    _flags: {},
    _ids: 0,
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Circular],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    name: '/',
    adapter: Adapter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      nsp: [Circular],
      rooms: [Map],
      sids: [Map],
      encoder: Encoder {},
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  client: Client {
    sockets: Map { 'bjfHeA7u5KrYdgXQAAAP' => [Circular] },
    nsps: Map { '/' => [Circular] },
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Namespace],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    conn: Socket {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      id: 'A4Uci7sDLIaQgqAYAAAO',
      server: [Server],
      upgrading: false,
      upgraded: false,
      readyState: 'open',
      writeBuffer: [],
      packetsFn: [],
      sentCallbackFn: [],
      cleanupFn: [Array],
      request: [IncomingMessage],
      remoteAddress: '::1',
      checkIntervalTimer: null,
      upgradeTimeoutTimer: null,
      pingTimeoutTimer: Timeout {
        _idleTimeout: 12000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 1976,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 133,
        [Symbol(triggerId)]: 122
      },
      pingIntervalTimer: Timeout {
        _idleTimeout: 3000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 1949,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 131,
        [Symbol(triggerId)]: 0
      },
      transport: [WebSocket],
      [Symbol(kCapture)]: false
    },
    encoder: Encoder {},
    decoder: Decoder { _callbacks: [Object] },
    id: 'A4Uci7sDLIaQgqAYAAAO',
    onclose: [Function: bound onclose],
    ondata: [Function: bound ondata],
    onerror: [Function: bound onerror],
    ondecoded: [Function: bound ondecoded],
    connectTimeout: null
  },
  acks: Map {},
  fns: [],
  flags: {},
  _rooms: Set {},
  server: Server {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    _nsps: Map { '/' => [Namespace] },
    parentNsps: Map {},
    _path: '/socket.io',
    clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
    _connectTimeout: 45000,
    _serveClient: true,
    _parser: {
      protocol: 5,
      PacketType: [Object],
      Encoder: [Function: Encoder],
      Decoder: [Function: Decoder]
    },
    encoder: Encoder {},
    _adapter: [Function: Adapter],
    sockets: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Circular],
      name: '/',
      adapter: [Adapter],
      [Symbol(kCapture)]: false
    },
    eio: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 8,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    httpServer: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 8,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 40000,
      _connectionKey: '6::::5555',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 4
    },
    engine: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 8,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  adapter: Adapter {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    nsp: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Server],
      name: '/',
      adapter: [Circular],
      [Symbol(kCapture)]: false
    },
    rooms: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Set],
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set],
      'zK0haMRFoA5NVbYsAAAK' => [Set],
      'kwTAG6akkreOLCBhAAAL' => [Set],
      'do0i8v3AVN9e7gcTAAAM' => [Set],
      'b1V4mtsjS8g0QSwwAAAN' => [Set],
      'bjfHeA7u5KrYdgXQAAAP' => [Set]
    },
    sids: Map {
      'IEBEEwrvLcAHFSRwAAAC' => [Set],
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set],
      'zK0haMRFoA5NVbYsAAAK' => [Set],
      'kwTAG6akkreOLCBhAAAL' => [Set],
      'do0i8v3AVN9e7gcTAAAM' => [Set],
      'b1V4mtsjS8g0QSwwAAAN' => [Set],
      'bjfHeA7u5KrYdgXQAAAP' => [Set]
    },
    encoder: Encoder {},
    [Symbol(kCapture)]: false
  },
  id: 'bjfHeA7u5KrYdgXQAAAP',
  connected: true,
  disconnected: false,
  handshake: {
    headers: {
      host: 'localhost:5555',
      connection: 'Upgrade',
      pragma: 'no-cache',
      'cache-control': 'no-cache',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36',
      upgrade: 'websocket',
      origin: 'http://localhost:3000',
      'sec-websocket-version': '13',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-US,en;q=0.9',
      'sec-websocket-key': 'zDySHTuUsCpUUcC1TAORYQ==',
      'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
    },
    time: 'Tue Nov 10 2020 12:37:14 GMT+0800 (Singapore Standard Time)',
    address: '::1',
    xdomain: true,
    secure: false,
    issued: 1604983034501,
    url: '/socket.io/?EIO=4&transport=websocket',
    query: [Object: null prototype] { EIO: '4', transport: 'websocket' },
    auth: {}
  },
  [Symbol(kCapture)]: false
}
Made socket connection
Socket {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  nsp: Namespace {
    _events: [Object: null prototype] { connection: [Function] },
    _eventsCount: 1,
    _maxListeners: undefined,
    sockets: Map {
      '0HdMywJXTyb4MTz3AAAD' => [Socket],
      'ufLNEy6r1NZlLMHTAAAG' => [Socket],
      'zK0haMRFoA5NVbYsAAAK' => [Socket],
      'kwTAG6akkreOLCBhAAAL' => [Socket],
      'do0i8v3AVN9e7gcTAAAM' => [Socket],
      'b1V4mtsjS8g0QSwwAAAN' => [Socket],
      'bjfHeA7u5KrYdgXQAAAP' => [Socket],
      'DBnz-kPLPtraKSdAAAAR' => [Circular]
    },
    _fns: [],
    _rooms: Set {},
    _flags: {},
    _ids: 0,
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Circular],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    name: '/',
    adapter: Adapter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      nsp: [Circular],
      rooms: [Map],
      sids: [Map],
      encoder: Encoder {},
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  client: Client {
    sockets: Map { 'DBnz-kPLPtraKSdAAAAR' => [Circular] },
    nsps: Map { '/' => [Circular] },
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Namespace],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    conn: Socket {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      id: 'V0fkcfPBYQBwDjsMAAAQ',
      server: [Server],
      upgrading: false,
      upgraded: false,
      readyState: 'open',
      writeBuffer: [],
      packetsFn: [],
      sentCallbackFn: [],
      cleanupFn: [Array],
      request: [IncomingMessage],
      remoteAddress: '::1',
      checkIntervalTimer: null,
      upgradeTimeoutTimer: null,
      pingTimeoutTimer: Timeout {
        _idleTimeout: 12000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 3444,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 165,
        [Symbol(triggerId)]: 154
      },
      pingIntervalTimer: Timeout {
        _idleTimeout: 3000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 3422,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 163,
        [Symbol(triggerId)]: 0
      },
      transport: [WebSocket],
      [Symbol(kCapture)]: false
    },
    encoder: Encoder {},
    decoder: Decoder { _callbacks: [Object] },
    id: 'V0fkcfPBYQBwDjsMAAAQ',
    onclose: [Function: bound onclose],
    ondata: [Function: bound ondata],
    onerror: [Function: bound onerror],
    ondecoded: [Function: bound ondecoded],
    connectTimeout: null
  },
  acks: Map {},
  fns: [],
  flags: {},
  _rooms: Set {},
  server: Server {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    _nsps: Map { '/' => [Namespace] },
    parentNsps: Map {},
    _path: '/socket.io',
    clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
    _connectTimeout: 45000,
    _serveClient: true,
    _parser: {
      protocol: 5,
      PacketType: [Object],
      Encoder: [Function: Encoder],
      Decoder: [Function: Decoder]
    },
    encoder: Encoder {},
    _adapter: [Function: Adapter],
    sockets: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Circular],
      name: '/',
      adapter: [Adapter],
      [Symbol(kCapture)]: false
    },
    eio: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 8,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    httpServer: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 8,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 40000,
      _connectionKey: '6::::5555',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 4
    },
    engine: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 8,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  adapter: Adapter {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    nsp: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Server],
      name: '/',
      adapter: [Circular],
      [Symbol(kCapture)]: false
    },
    rooms: Map {
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set],
      'zK0haMRFoA5NVbYsAAAK' => [Set],
      'kwTAG6akkreOLCBhAAAL' => [Set],
      'do0i8v3AVN9e7gcTAAAM' => [Set],
      'b1V4mtsjS8g0QSwwAAAN' => [Set],
      'bjfHeA7u5KrYdgXQAAAP' => [Set],
      'DBnz-kPLPtraKSdAAAAR' => [Set]
    },
    sids: Map {
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set],
      'zK0haMRFoA5NVbYsAAAK' => [Set],
      'kwTAG6akkreOLCBhAAAL' => [Set],
      'do0i8v3AVN9e7gcTAAAM' => [Set],
      'b1V4mtsjS8g0QSwwAAAN' => [Set],
      'bjfHeA7u5KrYdgXQAAAP' => [Set],
      'DBnz-kPLPtraKSdAAAAR' => [Set]
    },
    encoder: Encoder {},
    [Symbol(kCapture)]: false
  },
  id: 'DBnz-kPLPtraKSdAAAAR',
  connected: true,
  disconnected: false,
  handshake: {
    headers: {
      host: 'localhost:5555',
      connection: 'Upgrade',
      pragma: 'no-cache',
      'cache-control': 'no-cache',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36',
      upgrade: 'websocket',
      origin: 'http://localhost:3000',
      'sec-websocket-version': '13',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-US,en;q=0.9',
      'sec-websocket-key': 'r/cOFrBRBl4tPnbW7/qvPg==',
      'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
    },
    time: 'Tue Nov 10 2020 12:37:15 GMT+0800 (Singapore Standard Time)',
    address: '::1',
    xdomain: true,
    secure: false,
    issued: 1604983035969,
    url: '/socket.io/?EIO=4&transport=websocket',
    query: [Object: null prototype] { EIO: '4', transport: 'websocket' },
    auth: {}
  },
  [Symbol(kCapture)]: false
}
Made socket connection
Socket {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  nsp: Namespace {
    _events: [Object: null prototype] { connection: [Function] },
    _eventsCount: 1,
    _maxListeners: undefined,
    sockets: Map {
      '0HdMywJXTyb4MTz3AAAD' => [Socket],
      'ufLNEy6r1NZlLMHTAAAG' => [Socket],
      'zK0haMRFoA5NVbYsAAAK' => [Socket],
      'kwTAG6akkreOLCBhAAAL' => [Socket],
      'do0i8v3AVN9e7gcTAAAM' => [Socket],
      'b1V4mtsjS8g0QSwwAAAN' => [Socket],
      'bjfHeA7u5KrYdgXQAAAP' => [Socket],
      'DBnz-kPLPtraKSdAAAAR' => [Socket],
      'mRETFdDzyIOmr3hFAAAU' => [Circular]
    },
    _fns: [],
    _rooms: Set {},
    _flags: {},
    _ids: 0,
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Circular],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    name: '/',
    adapter: Adapter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      nsp: [Circular],
      rooms: [Map],
      sids: [Map],
      encoder: Encoder {},
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  client: Client {
    sockets: Map { 'mRETFdDzyIOmr3hFAAAU' => [Circular] },
    nsps: Map { '/' => [Circular] },
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Namespace],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    conn: Socket {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      id: 'iwln1jhK1lh3WGqtAAAS',
      server: [Server],
      upgrading: false,
      upgraded: false,
      readyState: 'open',
      writeBuffer: [],
      packetsFn: [],
      sentCallbackFn: [],
      cleanupFn: [Array],
      request: [IncomingMessage],
      remoteAddress: '::1',
      checkIntervalTimer: null,
      upgradeTimeoutTimer: null,
      pingTimeoutTimer: Timeout {
        _idleTimeout: 12000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 6795,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 240,
        [Symbol(triggerId)]: 213
      },
      pingIntervalTimer: Timeout {
        _idleTimeout: 3000,
        _idlePrev: [Timeout],
        _idleNext: [Timeout],
        _idleStart: 6366,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 222,
        [Symbol(triggerId)]: 0
      },
      transport: [WebSocket],
      [Symbol(kCapture)]: false
    },
    encoder: Encoder {},
    decoder: Decoder { _callbacks: [Object] },
    id: 'iwln1jhK1lh3WGqtAAAS',
    onclose: [Function: bound onclose],
    ondata: [Function: bound ondata],
    onerror: [Function: bound onerror],
    ondecoded: [Function: bound ondecoded],
    connectTimeout: null
  },
  acks: Map {},
  fns: [],
  flags: {},
  _rooms: Set {},
  server: Server {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    _nsps: Map { '/' => [Namespace] },
    parentNsps: Map {},
    _path: '/socket.io',
    clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
    _connectTimeout: 45000,
    _serveClient: true,
    _parser: {
      protocol: 5,
      PacketType: [Object],
      Encoder: [Function: Encoder],
      Decoder: [Function: Decoder]
    },
    encoder: Encoder {},
    _adapter: [Function: Adapter],
    sockets: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Circular],
      name: '/',
      adapter: [Adapter],
      [Symbol(kCapture)]: false
    },
    eio: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 10,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    httpServer: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 10,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 40000,
      _connectionKey: '6::::5555',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 4
    },
    engine: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 10,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  adapter: Adapter {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    nsp: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Server],
      name: '/',
      adapter: [Circular],
      [Symbol(kCapture)]: false
    },
    rooms: Map {
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set],
      'zK0haMRFoA5NVbYsAAAK' => [Set],
      'kwTAG6akkreOLCBhAAAL' => [Set],
      'do0i8v3AVN9e7gcTAAAM' => [Set],
      'b1V4mtsjS8g0QSwwAAAN' => [Set],
      'bjfHeA7u5KrYdgXQAAAP' => [Set],
      'DBnz-kPLPtraKSdAAAAR' => [Set],
      'mRETFdDzyIOmr3hFAAAU' => [Set]
    },
    sids: Map {
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set],
      'zK0haMRFoA5NVbYsAAAK' => [Set],
      'kwTAG6akkreOLCBhAAAL' => [Set],
      'do0i8v3AVN9e7gcTAAAM' => [Set],
      'b1V4mtsjS8g0QSwwAAAN' => [Set],
      'bjfHeA7u5KrYdgXQAAAP' => [Set],
      'DBnz-kPLPtraKSdAAAAR' => [Set],
      'mRETFdDzyIOmr3hFAAAU' => [Set]
    },
    encoder: Encoder {},
    [Symbol(kCapture)]: false
  },
  id: 'mRETFdDzyIOmr3hFAAAU',
  connected: true,
  disconnected: false,
  handshake: {
    headers: {
      host: 'localhost:5555',
      connection: 'Upgrade',
      pragma: 'no-cache',
      'cache-control': 'no-cache',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36',
      upgrade: 'websocket',
      origin: 'http://localhost:3000',
      'sec-websocket-version': '13',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-US,en;q=0.9,fil;q=0.8',
      'sec-websocket-key': 'vU3NDY5D8NM0vPNh6SShiw==',
      'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
    },
    time: 'Tue Nov 10 2020 12:37:19 GMT+0800 (Singapore Standard Time)',
    address: '::1',
    xdomain: true,
    secure: false,
    issued: 1604983039319,
    url: '/socket.io/?EIO=4&transport=websocket',
    query: [Object: null prototype] { EIO: '4', transport: 'websocket' },
    auth: {}
  },
  [Symbol(kCapture)]: false
}
Made socket connection
Socket {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  nsp: Namespace {
    _events: [Object: null prototype] { connection: [Function] },
    _eventsCount: 1,
    _maxListeners: undefined,
    sockets: Map {
      '0HdMywJXTyb4MTz3AAAD' => [Socket],
      'ufLNEy6r1NZlLMHTAAAG' => [Socket],
      'zK0haMRFoA5NVbYsAAAK' => [Socket],
      'kwTAG6akkreOLCBhAAAL' => [Socket],
      'do0i8v3AVN9e7gcTAAAM' => [Socket],
      'b1V4mtsjS8g0QSwwAAAN' => [Socket],
      'bjfHeA7u5KrYdgXQAAAP' => [Socket],
      'DBnz-kPLPtraKSdAAAAR' => [Socket],
      'mRETFdDzyIOmr3hFAAAU' => [Socket],
      '3KJYBSgzBL8rBz6TAAAV' => [Circular]
    },
    _fns: [],
    _rooms: Set {},
    _flags: {},
    _ids: 0,
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Circular],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    name: '/',
    adapter: Adapter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      nsp: [Circular],
      rooms: [Map],
      sids: [Map],
      encoder: Encoder {},
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  client: Client {
    sockets: Map { '3KJYBSgzBL8rBz6TAAAV' => [Circular] },
    nsps: Map { '/' => [Circular] },
    server: Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: [Map],
      parentNsps: Map {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: [Object],
      encoder: Encoder {},
      _adapter: [Function: Adapter],
      sockets: [Namespace],
      eio: [Server],
      httpServer: [Server],
      engine: [Server],
      [Symbol(kCapture)]: false
    },
    conn: Socket {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      id: 'rnUFcl_8ZTyPGjiaAAAT',
      server: [Server],
      upgrading: false,
      upgraded: false,
      readyState: 'open',
      writeBuffer: [],
      packetsFn: [],
      sentCallbackFn: [],
      cleanupFn: [Array],
      request: [IncomingMessage],
      remoteAddress: '::1',
      checkIntervalTimer: null,
      upgradeTimeoutTimer: null,
      pingTimeoutTimer: Timeout {
        _idleTimeout: 12000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 6833,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 246,
        [Symbol(triggerId)]: 224
      },
      pingIntervalTimer: Timeout {
        _idleTimeout: 3000,
        _idlePrev: [Timeout],
        _idleNext: [Timeout],
        _idleStart: 6387,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 232,
        [Symbol(triggerId)]: 0
      },
      transport: [WebSocket],
      [Symbol(kCapture)]: false
    },
    encoder: Encoder {},
    decoder: Decoder { _callbacks: [Object] },
    id: 'rnUFcl_8ZTyPGjiaAAAT',
    onclose: [Function: bound onclose],
    ondata: [Function: bound ondata],
    onerror: [Function: bound onerror],
    ondecoded: [Function: bound ondecoded],
    connectTimeout: null
  },
  acks: Map {},
  fns: [],
  flags: {},
  _rooms: Set {},
  server: Server {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    _nsps: Map { '/' => [Namespace] },
    parentNsps: Map {},
    _path: '/socket.io',
    clientPathRegex: /^\/socket\.io\/socket\.io(\.min|\.msgpack\.min)?\.js(\.map)?$/,
    _connectTimeout: 45000,
    _serveClient: true,
    _parser: {
      protocol: 5,
      PacketType: [Object],
      Encoder: [Function: Encoder],
      Decoder: [Function: Decoder]
    },
    encoder: Encoder {},
    _adapter: [Function: Adapter],
    sockets: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Circular],
      name: '/',
      adapter: [Adapter],
      [Symbol(kCapture)]: false
    },
    eio: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 10,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    httpServer: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 10,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 40000,
      _connectionKey: '6::::5555',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 4
    },
    engine: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      clients: [Object],
      clientsCount: 10,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  },
  adapter: Adapter {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    nsp: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: [Map],
      _fns: [],
      _rooms: Set {},
      _flags: {},
      _ids: 0,
      server: [Server],
      name: '/',
      adapter: [Circular],
      [Symbol(kCapture)]: false
    },
    rooms: Map {
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set],
      'zK0haMRFoA5NVbYsAAAK' => [Set],
      'kwTAG6akkreOLCBhAAAL' => [Set],
      'do0i8v3AVN9e7gcTAAAM' => [Set],
      'b1V4mtsjS8g0QSwwAAAN' => [Set],
      'bjfHeA7u5KrYdgXQAAAP' => [Set],
      'DBnz-kPLPtraKSdAAAAR' => [Set],
      'mRETFdDzyIOmr3hFAAAU' => [Set],
      '3KJYBSgzBL8rBz6TAAAV' => [Set]
    },
    sids: Map {
      '0HdMywJXTyb4MTz3AAAD' => [Set],
      'ufLNEy6r1NZlLMHTAAAG' => [Set],
      'zK0haMRFoA5NVbYsAAAK' => [Set],
      'kwTAG6akkreOLCBhAAAL' => [Set],
      'do0i8v3AVN9e7gcTAAAM' => [Set],
      'b1V4mtsjS8g0QSwwAAAN' => [Set],
      'bjfHeA7u5KrYdgXQAAAP' => [Set],
      'DBnz-kPLPtraKSdAAAAR' => [Set],
      'mRETFdDzyIOmr3hFAAAU' => [Set],
      '3KJYBSgzBL8rBz6TAAAV' => [Set]
    },
    encoder: Encoder {},
    [Symbol(kCapture)]: false
  },
  id: '3KJYBSgzBL8rBz6TAAAV',
  connected: true,
  disconnected: false,
  handshake: {
    headers: {
      host: 'localhost:5555',
      connection: 'Upgrade',
      pragma: 'no-cache',
      'cache-control': 'no-cache',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36',
      upgrade: 'websocket',
      origin: 'http://localhost:3000',
      'sec-websocket-version': '13',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-US,en;q=0.9,fil;q=0.8',
      'sec-websocket-key': 'go/beIFiRgACreeT46EQuQ==',
      'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
    },
    time: 'Tue Nov 10 2020 12:37:19 GMT+0800 (Singapore Standard Time)',
    address: '::1',
    xdomain: true,
    secure: false,
    issued: 1604983039358,
    url: '/socket.io/?EIO=4&transport=websocket',
    query: [Object: null prototype] { EIO: '4', transport: 'websocket' },
    auth: {}
  },
  [Symbol(kCapture)]: false
}
Made socket connection
new user
dada
chat message
{ nick: 'dada', message: 'dadadadada' }
